Creation of singly linked list
------------------------------

public Node createSinglyLikedList(int dataValue) {
		Node newNode = new Node();
		newNode.data = dataValue;
		head = tail = newNode;
		size++;
		return head;
	}

time and space complexity will be O(1)

Insertion
---------

public void insertInLinkedList(int dataValue, int location) {
		Node newNode = new Node(); ---------------------- O(1),O(1)
		newNode.data = dataValue; ---------------------- O(1),O(1)
		if (head == null) { ---------------------- O(1)
			createSinglyLikedList(dataValue); ---------------------- O(1),O(1)
			return; 
		} else if (location == 0) { ---------------------- O(1)
			newNode.next = head; ---------------------- O(1),O(1)
			head = newNode; ---------------------- O(1),O(1)
		} else if (location >= size) { ---------------------- O(1)
			tail.next = newNode; ---------------------- O(1),O(1)
			tail = newNode; ---------------------- O(1),O(1)
		} else { 
			Node tempNode = head; ---------------------- O(1),O(1)
			int index = 0; ---------------------- O(1),O(1)
			while (index < location - 1) { ---------------------- O(n)
				index++; ---------------------- O(1),O(1)
				tempNode = tempNode.next; ---------------------- O(1),O(1)
			}
			Node nextNode = tempNode.next; ---------------------- O(1),O(1)
			tempNode.next = newNode; ---------------------- O(1),O(1)
			newNode.next = nextNode; ---------------------- O(1),O(1)
		}
		size++;
	}

time and space complexity will be O(n), O(1)


Traversal of singly linked list
-------------------------------

