Tree:
-----

Tree is a non linear data structure and it is represented as a hirerical format

Properties
---------
* Represent hirerical format
* each node has two parts - data and link to next node
* Base catogories and sub catogories under it 

why we need tree:
----------------

* Quicker and easier access
* Store hirerical data format like folder structure, xml/html structure, organizing data
* many different type of data structures which perform better in various situations
     -> BInary tree, AVL tree, Red black tree, Trie


Tree Terminology
---------------

* Root - top node without parent
* Edge - link between parent and child node
* leaf - a node with no childerns
* sibilings - childrens of same parents
* anchestors - parents, grandparents, great grand parents
* depth of node - length of path from root to node
* height of node - length of path from node to deepest node
* depth of tree - depth of root node, it will be 0
* height of tree - height of root node - length of root from root to deepest not

Binary tree
===========

Binary tree is a data structure in whcih each node has at most 2 childrens 
Binary tree is a family of data structures(BST, AVL Tree, Heap tree, red-black tree, syntax tree)


Type of binary tree
===================

-> Full Binary Tree -  Each node should contain zero or two child
 Example:
    root
      Parent1
        child1
          subchild1
          subchild2
        child2
      Parent2 

-> perfect binary tree - All node should contain 2 childrens except leaf node and tree should be balanced and same depth
 example: 
   root
     Parent1
        child1
        child2
     Parent2
        child1
        child2

-> Complete binary tree - All levels should be filed execept last level and last level should be keep left
 example:
                                          N1
                                         /  \
                                        N2    N3
                                       / \    / \
                                      N4  N5 N6  N7
                                    /  \
                                   N8  N9
  N8 and N9 should be keep left as possible, if both n8 and n9 are connected to n5 then this case should not be complete binary tree

-> Balanced binary tree - All leaf node should locate at the same distance of the root node
 Example:
                                         N1
                                        /  \
                                       N2   N3
                                      / \     \
                                     N4  N5    N6
 here all leaf node should have same distance to the same node
